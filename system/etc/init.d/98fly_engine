#!/system/bin/sh
# ===========================================
# ===========================================
# ========== Fly_engine | Fly-On Mod� =======
# ========== By Slaid480@XDA 2015 ===========
# ===========================================
# ===========================================


#============ Copyright (C) 2015 Salah Abouabdallah(Slaid480)===========#
 
 see <http://www.gnu.org/licenses/>.
 
#=======================================================================#

FLY=/data/Fly-On/06fly_engine.log

busybox rm -f $FLY
busybox touch $FLY

echo "# Fly-On Mod� LOGGING ENGINE" | tee -a $FLY
echo "" | tee -a $FLY
echo "$( date +"%m-%d-%Y %H:%M:%S" )  applying fly_engine tweaks..." | tee -a $FLY;



# Network speed Tweaks

echo "5" > /proc/sys/net/ipv4/tcp_keepalive_probes;
echo "30" > /proc/sys/net/ipv4/tcp_keepalive_intvl;
echo "30" > /proc/sys/net/ipv4/tcp_fin_timeout;
echo "1" > /proc/sys/net/ipv4/tcp_moderate_rcvbuf;
echo "1" > /proc/sys/net/ipv4/route/flush;
echo "6144" > /proc/sys/net/ipv4/udp_rmem_min;
echo "6144" > /proc/sys/net/ipv4/udp_wmem_min;
echo "1" > /proc/sys/net/ipv4/tcp_rfc1337;
echo "0" > /proc/sys/net/ipv4/ip_no_pmtu_disc;
echo "0" > /proc/sys/net/ipv4/tcp_ecn;
echo "1" > /proc/sys/net/ipv4/tcp_fack;
echo "2" > /proc/sys/net/ipv4/tcp_synack_retries;
echo "2" > /proc/sys/net/ipv4/tcp_syn_retries;
echo "1" > /proc/sys/net/ipv4/tcp_no_metrics_save;
echo "1800" > /proc/sys/net/ipv4/tcp_keepalive_time;
echo "0" > /proc/sys/net/ipv4/ip_forward;
echo "1" > /proc/sys/net/ipv4/tcp_sack;
echo "1" > /proc/sys/net/ipv4/tcp_dsack;
echo "1" > /proc/sys/net/ipv4/tcp_tw_recycle;
echo "1" > /proc/sys/net/ipv4/tcp_window_scaling;
echo "0" > /proc/sys/net/ipv4/conf/default/accept_source_route;
echo "0" > /proc/sys/net/ipv4/conf/all/accept_source_route;
echo "0" > /proc/sys/net/ipv4/conf/all/accept_redirects;
echo "0" > /proc/sys/net/ipv4/conf/default/accept_redirects;
echo "0" > /proc/sys/net/ipv4/conf/all/secure_redirects;
echo "0" > /proc/sys/net/ipv4/conf/default/secure_redirects;
echo "0" > /proc/sys/net/ipv4/ip_dynaddr;
echo "1" > /proc/sys/net/ipv4/tcp_tw_reuse;
echo "1440000" > /proc/sys/net/ipv4/tcp_max_tw_buckets;
echo "57344 57344 524288" > /proc/sys/net/ipv4/tcp_mem;
echo "1440000" > /proc/sys/net/ipv4/tcp_max_tw_buckets;
echo "2097152" > /proc/sys/net/core/rmem_max;
echo "2097152" > /proc/sys/net/core/wmem_max;
echo "262144" > /proc/sys/net/core/rmem_default;
echo "262144" > /proc/sys/net/core/wmem_default;
echo "20480" > /proc/sys/net/core/optmem_max;
echo "2500" > /proc/sys/net/core/netdev_max_backlog;
echo "50" > /proc/sys/net/unix/max_dgram_qlen;

mem=`free|grep Mem | awk '{print $2}'`;

if [ "$mem" -lt 512000 ];then
    echo "0" > /proc/sys/net/ipv4/tcp_timestamps;	
else 
	echo "1" > /proc/sys/net/ipv4/tcp_timestamps;
fi;



# Build.prop Tweaks

#Graphics Tweaks and improvments
setprop hw3d.force 1
setprop hw2d.force 1
setprop debug.performance.tuning 1;
setprop video.accelerate.hw 1;
#Battery Tweaks
setprop wifi.supplicant_scan_interval 180;
pm.sleep_mode=1;
ro.ril.disable.power.collapse=0;
#kernel tweaks(Disable error checking)
setprop ro.kernel.android.checkjni 0;
#Net buffer tweaks
setprop net.tcp.buffersize.wifi 4096,87380,256960,4096,16384,256960
setprop net.tcp.buffersize.edge 4096,87380,256960,4096,16384,256960
setprop net.tcp.buffersize.umts 4096,87380,256960,4096,16384,256960
setprop net.tcp.buffersize.gprs 4096,87380,256960,4096,16384,256960
setprop net.tcp.buffersize.hspa 4096,87380,256960,4096,16384,256960
setprop net.tcp.buffersize.hsdpa 4096,87380,256960,4096,16384,256960
setprop net.tcp.buffersize.lte 4096,87380,256960,4096,16384,256960
setprop net.tcp.buffersize.evdo_b 4096,87380,256960,4096,16384,256960
setprop net.tcp.buffersize.default 4096,87380,256960,4096,16384,256960




# Disable Gentle Fair Sleepers (Would Improve smoothness)
echo "NO_GENTLE_FAIR_SLEEPERS" > /sys/kernel/debug/sched_features;
echo "NO_NEW_FAIR_SLEEPERS" > /sys/kernel/debug/sched_features;
echo "NO_NORMALIZED_SLEEPER" > /sys/kernel/debug/sched_features;

#disables normalized sleeper
if [ -e /sys/kernel/debug/sched_features ]
then
 echo NO_NORMALIZED_SLEEPER > /sys/kernel/debug/sched_features
fi


 #sysctl -w kernel.msgmni=1024;
 
 mem=`free|grep Mem | awk '{print $2}'`;

if [ "$mem" -lt 512000 ];then
	sysctl -w vm.dirty_background_ratio=20;
	sysctl -w vm.dirty_ratio=35;
elif [ "$mem" -lt 1024000 ];then
	sysctl -w vm.dirty_background_ratio=15;
	sysctl -w vm.dirty_ratio=15;
elif [ "$mem" -lt 1536000 ];then
	sysctl -w vm.dirty_background_ratio=10;
	sysctl -w vm.dirty_ratio=10;
else
    sysctl -w vm.dirty_background_ratio=5;
	sysctl -w vm.dirty_ratio=10;

fi;


# Kernel Tweaks 
if [ -e /proc/sys/kernel/softlockup_panic ]
then 
 echo 0 > /proc/sys/kernel/softlockup_panic
fi
if [ -e /proc/sys/kernel/hung_task_timeout_secs ]
then 
 echo 0 > /proc/sys/kernel/hung_task_timeout_secs
fi
if [ -e /proc/sys/kernel/panic_on_oops ]
then 
 echo 0 > /proc/sys/kernel/panic_on_oops
fi
if [ -e /proc/sys/kernel/panic ]
then 
 echo 0 > /proc/sys/kernel/panic
fi
busybox sysctl -e -w kernel.random.read_wakeup_threshold=128
busybox sysctl -e -w kernel.random.write_wakeup_threshold=1376

# End of fly_engine script
echo "fly_engine Tweaks have been applied successfully, enjoy!!"



echo "" | tee -a $FLY
echo "$( date +"%m-%d-%Y %H:%M:%S" ) fly_engine tweaks applied successfully!" | tee -a $FLY;






